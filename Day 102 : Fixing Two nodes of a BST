/*
class Node {
    int data;
    Node left;
    Node right;

    Node(int data) {
        this.data = data;
        left = null;
        right = null;
    }
}
*/

class Solution {
    private Node first, prev , middle , last;
    
    void correctBST(Node root) {
        
        first = middle = last = null;
        prev = new Node(Integer.MIN_VALUE);
        inOrder(root);
        
        if( first != null && last != null){
            int t = first.data;
            first.data = last.data;
            last.data = t;
        }else if(first != null && middle != null){
            int t = first.data;
            first.data = middle.data;
            middle.data = t;
        }
    }
    private void inOrder(Node root ){
        if( root == null) return ;
        
        inOrder(root.left);
        
        if( prev != null && root.data < prev.data  ){
            if( first == null){
                first = prev ;
                middle = root;
            }else{
                last = root;
            }
        }
                    prev = root ;
            inOrder(root.right);
    }
}
