/*
class Node {
    int data;
    Node left, right;

    public Node(int d) {
        data = d;
        left = right = null;
    }
}
*/
class Solution {
    boolean findTarget(Node root, int k) {
        List <Integer> inOrder = new ArrayList<>();
        inOrderTrav(root , inOrder);
        
        int left = 0 , right = inOrder.size()-1;
        while( left < right){
            int sum = inOrder.get(left) + inOrder.get(right);
            if( sum == k ) return true;
            else if( sum < k) left++;
            else right--;
        }
        return false;
    }
    private void inOrderTrav(Node root , List<Integer> list){
        if( root == null) return ;
        inOrderTrav(root.left , list);
        list.add(root.data);
        inOrderTrav(root.right , list);
    }
}
